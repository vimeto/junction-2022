// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  username       String?   @unique
  email          String?   @unique
  emailVerified  DateTime?
  passwordDigest String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  image          String?

  Account         Account[]
  Session         Session[]
  promptInstances PromptInstance[]
  followedBy      User[]           @relation("UserFollows")
  following       User[]           @relation("UserFollows")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Prompt {
  id String @id @default(cuid())

  activityLevel Int
  rarityLevel   Int
  feedbackType  String

  // all must include title and description
  translations Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  promptInstances PromptInstance[]
}

model PromptInstance {
  id String @id @default(cuid())

  date       DateTime @default(now())
  completed  Boolean  @default(false)
  inputValue String?
  enumValue  Int?
  imageUrl   String?
  shared     Boolean
  promptId   String
  userId     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  prompt Prompt @relation(fields: [promptId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}
